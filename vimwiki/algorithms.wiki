~~prints multiplication table of entered integer~~
ex: 3
1x3 = 3
2x3 = 6
3x3 = 9
...

int x
ask to enter a num
   loop (i = 1;i <=10;i++)
   output i*a

factorial of entered integer
ex: 4
1*1 = 1
1*2 = 2
2*3 = 6
6*4 = 24
...

int x
int fact = 1
ask to enter a num
   loop (i = 1;i<=num;i++)
   fact *= i
output fact

~~two entered nums and find the value of one raised to the power of another~~
ex: 3 and 2
3^2
3x3 = 9

int base,power
int result = 1;
   loop(i = 1;i<=power;i++)
   result *= base;
output result


~~sum of first 10 naturals numbers~~
int sum = 1
   loop (i=1;i<=10;i++)
   sum+=i
output sum

~~reverse of entered integer without space~~
ex:3241
>1423

int num;
int reverse = 0
ask to enter a num

int temp = num
remainder = 0

while temp >0
   remainder = temp % 10
   reverse = revers * 10 + remainder
   temp /= 10
output reverse num

~~from entered integers, find the sum of odd and even numbers~~

int[] x = {,,,,}
int even = 0
int odd = 0

loop (i=0;i<x.length;i++)
   if x[i] % 2 == 0
      even += x[i]
   else
      odd += x[i]
output sum of even & odd

~~from entered integers, output whether the number is prime or not~~
int x
boolean flag = true
loop(i = 2;i < x;i++)
   if(x % 2 == 0)
      flag = false
      break
if(flag && x > 1)
   output x is a prime number

~~HCF of two given number~~
int divisor = 3
int dividend = 9
int remainder, hcf = 0
do
   remainder = divisor % dividend;
   if(remainder == 0)
      hcf = divisor;
   else
   dividend = divisor
   dividend = remainder
while(remainder !=0)
output hcf

~~find max and min value from entered integers~~
int max = Integer.MINIMUM;
int min = Integer.MAXIMUMJ;
int x;

while(true)
   ask to enter x
   if x > max
      max = x
   if x < min
      min = x
output min and max

~~output all Armstrong numbers from 1-500~~
_note_: if sum of cubes of each digits of the number is 
equal to the number itself, then the number is called
Armstrong number.
ex: (1*1*1) + (5*5*5) + (3*3*3) = 153

int d1,d2,d3
loop int i= 1;i<=500;i++
   int temp = i
   d1 = temp % 10
   
   temp = temp / 10
   d2 = temp % 10
   
   temp = temp / 10
   d3 = temp % 10
   
   if((d1*d1*d1) + (d2*d2*d2) + (d3*d3*d3) == i)
      ouput armstrong numbers

~~print fibonacci sequence of n terms where n is input by user~~
ex: 0 1 1 2 3 5 8 13 24....

int number // to hold no. terms
int first_term = 0;
int second_term = 1;
int third_term;

output ask for no. terms
output first_term + " " second_term
loop (i = 3;i<=number;i++)
  third_term = first_term + second_term
  output third_term + " "
  first_term = second_term
  second_term = third_term
   
~~Write a program to calculate the sum of following series where n is input by user.~~ 
ex: 1 + 1/2 + 1/3 + 1/4 + 1/5 +…………1/n

int n
double sum = 0
output enter no of terms
loop (i = 1;i<=n;i++)
   sum+= 1.0/i
output sum























